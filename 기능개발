import java.util.Stack;
class Solution {
    public int[] solution(int[] progresses, int[] speeds) {
        int[] answer = {};
        int count=0;
        int end_day=0;
        Stack<Integer> sta=new Stack<Integer>();
        for(int i=0;i<progresses.length;i++){
            if(progresses[i]+speeds[i]*end_day>=100){
                count++;
                continue;
            }
            else{
                if(count!=0)sta.push(count);
                count=0;
                end_day=((100-progresses[i])%speeds[i])==0? (100-progresses[i])/speeds[i] : (100-progresses[i])/speeds[i]+1;
                count++;
            }  
        }
        if(count!=0) sta.push(count);
        answer= new int[sta.size()];
        for(int i=sta.size()-1;i>=0;i--){
            answer[i]=sta.pop();
        }
        
        return answer;
    }
}
